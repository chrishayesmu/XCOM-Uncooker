; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "XCOM Uncooker"
#define MyAppVersion "1.0"
#define MyAppPublisher "SwfDelicious"
#define MyAppURL "https://github.com/chrishayesmu/XCOM-Uncooker"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{27B3AEEA-ADE3-4FAA-8000-24DEAC4F3179}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
CreateAppDir=no
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=xcom-uncooker-udk-setup
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Setup]
DisableProgramGroupPage=yes

[Files]
Source: ".\Config\*"; DestDir: "{code:GetUdkDir}\UDKGame\Config"; Flags: ignoreversion 
Source: ".\Script\*"; DestDir: "{code:GetUdkDir}\Development\Src"; Flags: ignoreversion recursesubdirs createallsubdirs

[Icons]
; Shortcuts live in the top level UDK folder
Name: "{code:GetUdkDir}\Open UDK Editor"; Filename: "{code:GetUdkDir}\Binaries\Win64\UDK.exe"; Parameters: "editor"
Name: "{code:GetUdkDir}\Update Asset Database"; Filename: "{code:GetUdkDir}\Binaries\Win64\UDK.exe"; Parameters: "CheckpointGameAssetDatabase -verbose"

[InstallDelete]
; Remove Unreal Tournament source, plus Core/Engine (which we'll replace with our own version later)
Name: "{code:GetUdkDir}\Development\Src\Core"; Type: filesandordirs
Name: "{code:GetUdkDir}\Development\Src\Engine"; Type: filesandordirs
Name: "{code:GetUdkDir}\Development\Src\UTEditor"; Type: filesandordirs
Name: "{code:GetUdkDir}\Development\Src\UTGame"; Type: filesandordirs
Name: "{code:GetUdkDir}\Development\Src\UTGameContent"; Type: filesandordirs

; Remove example content and unneeded shader caches
Name: "{code:GetUdkDir}\UDKGame\Content\Maps"; Type: filesandordirs
Name: "{code:GetUdkDir}\UDKGame\Content\Mobile"; Type: filesandordirs
Name: "{code:GetUdkDir}\UDKGame\Content\Shared"; Type: filesandordirs
Name: "{code:GetUdkDir}\UDKGame\Content\Showcases"; Type: filesandordirs
Name: "{code:GetUdkDir}\UDKGame\Content\TestPackages"; Type: filesandordirs
Name: "{code:GetUdkDir}\UDKGame\Content\UT3"; Type: filesandordirs
Name: "{code:GetUdkDir}\UDKGame\Content\GlobalShaderCache-PC-D3D-SM5.bin"; Type: filesandordirs
Name: "{code:GetUdkDir}\UDKGame\Content\GlobalShaderCache-PC-OpenGL.bin"; Type: filesandordirs
Name: "{code:GetUdkDir}\UDKGame\Content\RefShaderCache-PC-D3D-SM5.bin"; Type: filesandordirs
Name: "{code:GetUdkDir}\UDKGame\Content\RefShaderCache-PC-OpenGL.bin"; Type: filesandordirs

; Remove the example Unreal Tournament files
Name: "{code:GetUdkDir}\UDKGame\Script\UTEditor.u"; Type: files
Name: "{code:GetUdkDir}\UDKGame\Script\UTGame.u"; Type: files
Name: "{code:GetUdkDir}\UDKGame\Script\UTGameContent.u"; Type: files

[Code]
var 
  UdkDirPage: TInputDirWizardPage;

function GetUdkDir(Param: String): String;
begin
  Result := RemoveBackslash(UdkDirPage.Values[0]);
end;

procedure InitializeWizard();
begin
  UdkDirPage := CreateInputDirPage(wpSelectDir,
    'Select UDK Folder', '',
    'Select the folder where the UDK is installed, then click Next.' + #13#10#13#10
    + 'WARNING: this MUST be a clean UDK installation. You will NOT be able to use this installation for compiling scripts; it will only be for browsing XCOM assets.' + #13#10#13#10
    + 'Choose the top-level folder of the UDK, which contains the Binaries, Development, Engine, and UDKGame folders within it.',
    False, '');
  UdkDirPage.Add('');
end;

{ Validate that we can move past our custom pages }
function NextButtonClick(CurPageID: Integer): Boolean;
var 
  UdkDir: string;
begin
  Result := True;

  if (CurPageID = UdkDirPage.ID) then begin
    UdkDir := AddBackslash(UdkDirPage.Values[0]);

    if not DirExists(UdkDir) then begin
      MsgBox('You must select the UDK directory to continue.', mbError, MB_OK);
      Result := False;
    end else if not DirExists(UdkDir + 'UDKGame\Content') then begin
      MsgBox('Could not locate UDKGame\Content within the chosen folder. Please be sure to choose the top-most folder of the UDK.', mbError, MB_OK);
      Result := False;
    end
  end;
end;

{ When installation starts, modify the UDK files }
procedure CurStepChanged(CurStep: TSetupStep);
begin
    if (CurStep = ssInstall) then begin
      
    end;
end;